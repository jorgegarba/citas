{"version":3,"sources":["components/Header.js","components/AgregarCita.js","components/Cita.js","components/ListaCitas.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","AgregarCita","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","crearNuevaCita","e","preventDefault","mascota","nombreMascotaRef","current","value","propietario","propietarioRef","fecha","fechaRef","hora","horaRef","sintomas","sintomasRef","setState","error","nuevaCita","id","uuid","crearCita","currentTarget","reset","React","createRef","state","onSubmit","ref","type","placeholder","Component","Cita","eliminarCita","borrarCita","info","_this$props$info","onClick","ListaCitas","citas","mensaje","length","map","cita","Cita_Cita","key","App","objCita","console","log","push","citasActuales","filter","localStorage","getItem","JSON","parse","setItem","stringify","AgregarCita_AgregarCita","ListaCitas_ListaCitas","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0193a5df.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <header>\r\n            <h1 className=\"text-center\">{props.titulo}</h1>\r\n        </header>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport uuid from 'uuid';\r\n\r\nexport default class AgregarCita extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.nombreMascotaRef = React.createRef();\r\n        this.propietarioRef = React.createRef();\r\n        this.fechaRef = React.createRef();\r\n        this.horaRef = React.createRef();\r\n        this.sintomasRef = React.createRef();\r\n        this.state = {\r\n            error: false\r\n        }\r\n    }\r\n\r\n    crearNuevaCita = (e) => {\r\n        e.preventDefault();\r\n        const mascota = this.nombreMascotaRef.current.value;\r\n        const propietario = this.propietarioRef.current.value;\r\n        const fecha = this.fechaRef.current.value;\r\n        const hora = this.horaRef.current.value;\r\n        const sintomas = this.sintomasRef.current.value;\r\n\r\n        if (mascota === '' ||\r\n            propietario === '' ||\r\n            fecha === '' ||\r\n            hora === '' ||\r\n            sintomas === '') {\r\n            this.setState({\r\n                error: true\r\n            })\r\n        } else {\r\n            const nuevaCita = {\r\n                id: uuid(),\r\n                mascota,\r\n                propietario,\r\n                fecha,\r\n                hora,\r\n                sintomas\r\n            };\r\n\r\n            this.props.crearCita(nuevaCita);\r\n\r\n            e.currentTarget.reset();\r\n            this.setState({\r\n                error:false,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        let { error } = this.state;\r\n        return (\r\n\r\n            <div className=\"card mt-5\">\r\n                <div className=\"card-body\">\r\n                    <h2 className=\"card-title text-center mb-5\">Agrega las Citas Aqui</h2>\r\n                    <form onSubmit={this.crearNuevaCita}>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre Mascota</label>\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n                                <input ref={this.nombreMascotaRef} type=\"text\" className=\"form-control\" placeholder=\"Nombre Mascota\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre Dueño</label>\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n                                <input ref={this.propietarioRef} type=\"text\" className=\"form-control\" placeholder=\"Nombre Dueño de la Mascota\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Fecha</label>\r\n                            <div className=\"col-sm-8 col-lg-4  mb-4 mb-lg-0\">\r\n                                <input ref={this.fechaRef} type=\"date\" className=\"form-control\" />\r\n                            </div>\r\n\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Hora</label>\r\n                            <div className=\"col-sm-8 col-lg-4\">\r\n                                <input ref={this.horaRef} type=\"time\" className=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Sintomas</label>\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n                                <textarea ref={this.sintomasRef} className=\"form-control\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row justify-content-end\">\r\n                            <div className=\"col-sm-3\">\r\n                                <button type=\"submit\" className=\"btn btn-success w-100\">Agregar</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    {error ? <div className=\"alert alert-danger text-center\">Los campos son obligatorios</div> :null }\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Cita extends Component {\r\n    eliminarCita = () => {\r\n        this.props.borrarCita(this.props.info.id);\r\n    }\r\n    render() {\r\n        const {id,propietario,fecha,hora,mascota,sintomas} = this.props.info;\r\n        return (\r\n            <div className=\"media mt-3\">\r\n                <div className=\"media-body\">\r\n                    <h3 className=\"mt-0\">\r\n                        {mascota}\r\n                    </h3>\r\n                    <p className=\"card-text\"><span>Nombre del Dueño: </span>{propietario}</p>\r\n                    <p className=\"card-text\"><span>Fecha: </span>{fecha}</p>\r\n                    <p className=\"card-text\"><span>Hora: </span>{hora}</p>\r\n                    <p className=\"card-text\"><span>Sintomas: </span></p>\r\n                    <p className=\"card-text\">{sintomas}</p>\r\n                    <button className=\"btn btn-block btn-danger\" onClick={this.eliminarCita}>\r\n                        Eliminar Cita\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Cita from './Cita';\r\n\r\nexport default class ListaCitas extends Component {\r\n    render() {\r\n        const {citas} = this.props;\r\n        const mensaje = citas.length === 0 ? \"No hay Citas\" : \"Administra tus citas aqui\";\r\n        return (\r\n            <div className=\"card mt-5\">\r\n                <div className=\"card-body\">\r\n                    <h2 className=\"card-title text-center\">{mensaje}</h2>\r\n                    <div className=\"lista-citas\">\r\n                        {\r\n                            citas.map(cita => <Cita key={cita.id} info={cita} borrarCita={this.props.borrarCita}/>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport Header from './components/Header';\nimport AgregarCita from './components/AgregarCita';\nimport ListaCitas from './components/ListaCitas';\n\nexport default class App extends React.Component{\n  \n  constructor(){\n    super();\n    this.state = {\n      citas: [],\n    }\n  }\n\n  crearCita = (objCita)=>{\n    const {citas} = this.state;\n    console.log(citas);\n    \n    citas.push(objCita);\n    this.setState({\n      citas\n    })\n  }\n\n\n  borrarCita = id =>{\n    console.log(\"borrando \" + id);\n    let citasActuales = this.state.citas;\n    citasActuales = citasActuales.filter(cita => cita.id != id);\n    this.setState({citas:citasActuales});\n    \n  }\n\n  componentDidMount(){\n    if(localStorage.getItem('citas')){\n      this.setState({\n        citas:JSON.parse(localStorage.getItem('citas'))\n      });\n    }\n  }\n\n  componentDidUpdate(){\n    localStorage.setItem('citas',JSON.stringify(this.state.citas));\n  }\n\n  render() {\n    return (\n      <div className=\"container \">\n        <Header titulo={\"Administrador de Pacientes\"}></Header>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <AgregarCita crearCita={this.crearCita}/>\n          </div>\n          <div className=\"col-md-6\">\n            <ListaCitas citas={this.state.citas} borrarCita={this.borrarCita}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}